!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("bs-ngx-pagination",["exports","@angular/core","@angular/common"],a):a(e["bs-ngx-pagination"]={},e.ng.core,e.ng.common)}(this,function(e,a,t){"use strict";var n=function(){function e(){}return e.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),l=function(){function e(){this.pageChange=new a.EventEmitter,this.perPageChange=new a.EventEmitter,this.dataChange=new a.EventEmitter,this.dataValue={}}return Object.defineProperty(e.prototype,"data",{get:function(){return this.data},set:function(e){this.dataValue=e,this.normalizeData(),this.dataChange.emit(e)},enumerable:!0,configurable:!0}),e.prototype.normalizeData=function(){this.dataValue.select_per_page===undefined&&(this.dataValue.select_per_page=!0),this.dataValue.input_page===undefined&&(this.dataValue.input_page=!0),this.dataValue.select_per_page_values!==undefined&&0!==this.dataValue.select_per_page_values.length||(this.dataValue.select_per_page_values=[10,20,50,100,250]),-1===this.dataValue.select_per_page_values.indexOf(+this.dataValue.per_page)&&(this.dataValue.select_per_page_values.push(+this.dataValue.per_page),this.dataValue.select_per_page_values.sort(function(e,a){return e-a}))},e.prototype.pageChanged=function(e){e<1?e=1:e>this.dataValue.last_page&&(e=this.dataValue.last_page),this.pageChange.emit(e)},e.prototype.perPageChanged=function(e){this.perPageChange.emit(+e)},e.prototype.inputPageChanged=function(e){var a=+e.target.value;Number.isNaN(a)?e.target.value=this.dataValue.current_page:(a<1?(a=1,e.target.value=a):a>this.dataValue.last_page&&(a=this.dataValue.last_page,e.target.value=a),this.pageChange.emit(a))},e.decorators=[{type:a.Component,args:[{selector:"bs-ngx-pagination",template:'<div class="page-container d-flex justify-content-between align-items-center">\r\n  <div class="form-group page-per-page" *ngIf="dataValue.select_per_page">\r\n    <label>Per Page</label>\r\n    <select class="form-control" name="per_page" (blur)="perPageChanged($event.target.value)" (keyup.enter)="$event.target.blur()">\r\n      <option *ngFor="let pp of dataValue.select_per_page_values" [value]="pp" [selected]="dataValue.per_page==pp">{{ pp }}</option>\r\n    </select>\r\n  </div>\r\n  <ul class="pagination justify-content-center align-items-center">\r\n    <li class="page-item" *ngIf="dataValue.current_page>1">\r\n      <a class="page-link" [href]="dataValue.prev_page_url" aria-label="Previous" (click)="pageChanged(dataValue.current_page-1);$event.preventDefault();">\r\n        <span aria-hidden="true">&laquo;</span>\r\n        <span class="sr-only">Previous</span>\r\n      </a>\r\n    </li>\r\n\r\n    <li class="page-item" *ngIf="dataValue.current_page>1" (click)="pageChanged(1);$event.preventDefault();"><a class="page-link" href="#">1</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page>2" (click)="pageChanged(2);$event.preventDefault();"><a class="page-link" href="#">2</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page==7" (click)="pageChanged(3);$event.preventDefault();"><a class="page-link" href="#">3</a></li>\r\n\r\n    <li class="page-item disabled" *ngIf="dataValue.current_page>7"><a class="page-link" href="#">...</a></li>\r\n\r\n    <li class="page-item" *ngIf="dataValue.current_page>5"><a class="page-link" href="#" (click)="pageChanged(dataValue.current_page-3);$event.preventDefault();">{{ dataValue.current_page-3 }}</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page>4"><a class="page-link" href="#" (click)="pageChanged(dataValue.current_page-2);$event.preventDefault();">{{ dataValue.current_page-2 }}</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page>3"><a class="page-link" href="#" (click)="pageChanged(dataValue.current_page-1);$event.preventDefault();">{{ dataValue.current_page-1 }}</a></li>\r\n\r\n    <li class="page-item active"><a class="page-link" href="#" (click)="$event.preventDefault()">{{ dataValue.current_page }}</a></li>\r\n\r\n    <li class="page-item" *ngIf="dataValue.current_page<dataValue.last_page-2"><a class="page-link" href="#" (click)="pageChanged(dataValue.current_page+1);$event.preventDefault();">{{ dataValue.current_page+1 }}</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page<dataValue.last_page-3"><a class="page-link" href="#" (click)="pageChanged(dataValue.current_page+2);$event.preventDefault();">{{ dataValue.current_page+2 }}</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page<dataValue.last_page-4"><a class="page-link" href="#" (click)="pageChanged(dataValue.current_page+3);$event.preventDefault();">{{ dataValue.current_page+3 }}</a></li>\r\n\r\n    <li class="page-item disabled" *ngIf="dataValue.current_page<dataValue.last_page-6"><a class="page-link" href="#">...</a></li>\r\n\r\n    <li class="page-item" *ngIf="dataValue.current_page==dataValue.last_page-6"><a class="page-link" href="#" (click)="pageChanged(dataValue.last_page-2);$event.preventDefault();">{{ dataValue.last_page-2 }}</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page<dataValue.last_page-1"><a class="page-link" href="#" (click)="pageChanged(dataValue.last_page-1);$event.preventDefault();">{{ dataValue.last_page-1 }}</a></li>\r\n    <li class="page-item" *ngIf="dataValue.current_page<dataValue.last_page"><a class="page-link" href="#" (click)="pageChanged(dataValue.last_page);$event.preventDefault();">{{ dataValue.last_page }}</a></li>\r\n\r\n    <li class="page-item" *ngIf="dataValue.current_page<dataValue.last_page">\r\n      <a class="page-link" [href]="dataValue.next_page_url" aria-label="Previous" (click)="pageChanged(dataValue.current_page+1);$event.preventDefault();">\r\n        <span aria-hidden="true">&raquo;</span>\r\n        <span class="sr-only">Next</span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <div class="form-group page-input" *ngIf="dataValue.input_page">\r\n    <label>Page</label>\r\n    <input class="form-control" name="page" (blur)="inputPageChanged($event)" (keyup.enter)="$event.target.blur()" [value]="dataValue.current_page">\r\n  </div>\r\n</div>\r\n',styles:[".page-container{padding:10px 20px}.page-container .page-input>label,.page-container .page-per-page>label{font-size:11px}.page-container .page-input{text-align:right;max-width:70px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={pageChange:[{type:a.Output}],perPageChange:[{type:a.Output}],dataChange:[{type:a.Output}],data:[{type:a.Input}]},e}(),r=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{declarations:[l],imports:[t.CommonModule],exports:[l]}]}],e}();e.BsNgxPaginationService=n,e.BsNgxPaginationComponent=l,e.BsNgxPaginationModule=r,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=bs-ngx-pagination.umd.min.js.map