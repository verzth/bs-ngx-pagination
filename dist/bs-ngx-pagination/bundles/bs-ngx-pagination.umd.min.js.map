{"version":3,"sources":["ng://bs-ngx-pagination/lib/bs-ngx-pagination.service.ts","ng://bs-ngx-pagination/lib/bs-ngx-pagination.component.ts","ng://bs-ngx-pagination/lib/bs-ngx-pagination.module.ts"],"names":["BsNgxPaginationService","Injectable","args","providedIn","BsNgxPaginationComponent","this","pageChange","EventEmitter","perPageChange","dataChange","dataValue","Object","defineProperty","prototype","data","val","normalizeData","emit","select_per_page","undefined","input_page","select_per_page_values","length","indexOf","per_page","push","sort","a","b","pageChanged","page","last_page","perPageChanged","count","inputPageChanged","e","target","value","Number","isNaN","current_page","Component","selector","template","Output","Input","BsNgxPaginationModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"2UAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAeE,SAAAA,IAJUC,KAAAC,WAAa,IAAIC,EAAAA,aACjBF,KAAAG,cAAgB,IAAID,EAAAA,aACpBF,KAAAI,WAAa,IAAIF,EAAAA,aAC3BF,KAAAK,UAAS,GAqDX,OAlDEC,OAAAC,eACIR,EAAAS,UAAA,OAAI,KADR,WAEE,OAAOR,KAAKS,UAEd,SAASC,GACPV,KAAKK,UAAYK,EACjBV,KAAKW,gBACLX,KAAKI,WAAWQ,KAAKF,oCAEfX,EAAAS,UAAAG,cAAR,WACMX,KAAKK,UAAUQ,kBAAoBC,YACrCd,KAAKK,UAAUQ,iBAAkB,GAE/Bb,KAAKK,UAAUU,aAAeD,YAChCd,KAAKK,UAAUU,YAAa,GAE1Bf,KAAKK,UAAUW,yBAA2BF,WAA8D,IAAjDd,KAAKK,UAAUW,uBAAuBC,SAC/FjB,KAAKK,UAAUW,uBAAyB,CAAC,GAAI,GAAI,GAAI,IAAK,OAEoB,IAA5EhB,KAAKK,UAAUW,uBAAuBE,QAAQlB,KAAKK,UAAUc,YAC/DnB,KAAKK,UAAUW,uBAAuBI,MAAMpB,KAAKK,UAAUc,UAC3DnB,KAAKK,UAAUW,uBAAuBK,KAAI,SAAEC,EAAGC,GAAM,OAAAD,EAAIC,MAG7DxB,EAAAS,UAAAgB,YAAA,SAAYC,GACNA,EAAO,EACTA,EAAO,EACEA,EAAOzB,KAAKK,UAAUqB,YAC/BD,EAAOzB,KAAKK,UAAUqB,WAExB1B,KAAKC,WAAWW,KAAKa,IAEvB1B,EAAAS,UAAAmB,eAAA,SAAeC,GACb5B,KAAKG,cAAcS,MAAMgB,IAE3B7B,EAAAS,UAAAqB,iBAAA,SAAiBC,OACXL,GAAQK,EAAEC,OAAOC,MAChBC,OAAOC,MAAMT,GAUhBK,EAAEC,OAAOC,MAAQhC,KAAKK,UAAU8B,cAT5BV,EAAO,GACTA,EAAO,EACPK,EAAEC,OAAOC,MAAQP,GACRA,EAAOzB,KAAKK,UAAUqB,YAC/BD,EAAOzB,KAAKK,UAAUqB,UACtBI,EAAEC,OAAOC,MAAQP,GAEnBzB,KAAKC,WAAWW,KAAKa,yBA3D1BW,EAAAA,UAASvC,KAAA,CAAC,CACTwC,SAAU,oBACVC,SAAA,sgJAMCC,EAAAA,8BACAA,EAAAA,2BACAA,EAAAA,qBAIAC,EAAAA,SAkDHzC,EAnEA,GCAA0C,EAAA,WAIA,SAAAA,KAOqC,2BAPpCC,EAAAA,SAAQ7C,KAAA,CAAC,CACR8C,aAAc,CAAC5C,GACf6C,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAC/C,OAEyB0C,EAXrC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BsNgxPaginationService {\n\n  constructor() { }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport Pagination from './bs-ngx-pagination.interface';\n\n@Component({\n  selector: 'bs-ngx-pagination',\n  templateUrl: 'bs-ngx-pagination.component.html',\n  styleUrls: [\n    'bs-ngx-pagination.component.scss'\n  ]\n})\nexport class BsNgxPaginationComponent {\n  @Output() pageChange = new EventEmitter<number>();\n  @Output() perPageChange = new EventEmitter<number>();\n  @Output() dataChange = new EventEmitter<number>();\n  dataValue: Pagination = {} as Pagination;\n  constructor() {}\n\n  @Input()\n  get data() {\n    return this.data;\n  }\n  set data(val) {\n    this.dataValue = val;\n    this.normalizeData();\n    this.dataChange.emit(val);\n  }\n  private normalizeData() {\n    if (this.dataValue.select_per_page === undefined) {\n      this.dataValue.select_per_page = true;\n    }\n    if (this.dataValue.input_page === undefined) {\n      this.dataValue.input_page = true;\n    }\n    if (this.dataValue.select_per_page_values === undefined || this.dataValue.select_per_page_values.length === 0) {\n      this.dataValue.select_per_page_values = [10, 20, 50, 100, 250];\n    }\n    if (this.dataValue.select_per_page_values.indexOf(this.dataValue.per_page) === -1) {\n      this.dataValue.select_per_page_values.push(+this.dataValue.per_page);\n      this.dataValue.select_per_page_values.sort((a, b) => a - b);\n    }\n  }\n  pageChanged(page: number) {\n    if (page < 1) {\n      page = 1;\n    } else if (page > this.dataValue.last_page) {\n      page = this.dataValue.last_page;\n    }\n    this.pageChange.emit(page);\n  }\n  perPageChanged(count: number) {\n    this.perPageChange.emit(+count);\n  }\n  inputPageChanged(e) {\n    let page = +e.target.value;\n    if (!Number.isNaN(page)) {\n      if (page < 1) {\n        page = 1;\n        e.target.value = page;\n      } else if (page > this.dataValue.last_page) {\n        page = this.dataValue.last_page;\n        e.target.value = page;\n      }\n      this.pageChange.emit(page);\n    } else {\n      e.target.value = this.dataValue.current_page;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BsNgxPaginationComponent } from './bs-ngx-pagination.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [BsNgxPaginationComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BsNgxPaginationComponent]\n})\nexport class BsNgxPaginationModule { }\n"]}