{"version":3,"sources":["ng://bs-ngx-pagination/lib/bs-ngx-pagination.service.ts","ng://bs-ngx-pagination/lib/bs-ngx-pagination.component.ts","ng://bs-ngx-pagination/lib/bs-ngx-pagination.module.ts"],"names":["BsNgxPaginationService","Injectable","args","providedIn","BsNgxPaginationComponent","this","pageChange","EventEmitter","perPageChange","data","prototype","ngOnInit","select_per_page","undefined","input_page","select_per_page_values","length","pageChanged","page","last_page","emit","perPageChanged","count","inputPageChanged","e","target","value","Number","isNaN","current_page","Component","selector","template","Output","Input","BsNgxPaginationModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"2UAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAcE,SAAAA,IAHUC,KAAAC,WAAa,IAAIC,EAAAA,aACjBF,KAAAG,cAAgB,IAAID,EAAAA,aACrBF,KAAAI,KAAI,GAwCf,OArCEL,EAAAM,UAAAC,SAAA,WACMN,KAAKI,KAAKG,kBAAoBC,YAChCR,KAAKI,KAAKG,iBAAkB,GAE1BP,KAAKI,KAAKK,aAAeD,YAC3BR,KAAKI,KAAKK,YAAa,GAErBT,KAAKI,KAAKM,yBAA2BF,WAAyD,IAA5CR,KAAKI,KAAKM,uBAAuBC,SACrFX,KAAKI,KAAKM,uBAAyB,CAAC,GAAI,GAAI,GAAI,IAAK,OAGzDX,EAAAM,UAAAO,YAAA,SAAYC,GACNA,EAAO,EACTA,EAAO,EACEA,EAAOb,KAAKI,KAAKU,YAC1BD,EAAOb,KAAKI,KAAKU,WAEnBd,KAAKC,WAAWc,KAAKF,IAEvBd,EAAAM,UAAAW,eAAA,SAAeC,GACbjB,KAAKG,cAAcY,KAAKE,IAE1BlB,EAAAM,UAAAa,iBAAA,SAAiBC,OACXN,GAAQM,EAAEC,OAAOC,MAChBC,OAAOC,MAAMV,GAUhBM,EAAEC,OAAOC,MAAQrB,KAAKI,KAAKoB,cATvBX,EAAO,GACTA,EAAO,EACPM,EAAEC,OAAOC,MAAQR,GACRA,EAAOb,KAAKI,KAAKU,YAC1BD,EAAOb,KAAKI,KAAKU,UACjBK,EAAEC,OAAOC,MAAQR,GAEnBb,KAAKC,WAAWc,KAAKF,yBA7C1BY,EAAAA,UAAS5B,KAAA,CAAC,CACT6B,SAAU,oBACVC,SAAA,muIAMCC,EAAAA,8BACAA,EAAAA,qBACAC,EAAAA,SAwCH9B,EArDA,GCAA+B,EAAA,WAIA,SAAAA,KAOqC,2BAPpCC,EAAAA,SAAQlC,KAAA,CAAC,CACRmC,aAAc,CAACjC,GACfkC,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAACpC,OAEyB+B,EAXrC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BsNgxPaginationService {\n\n  constructor() { }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport Pagination from './bs-ngx-pagination.interface';\n\n@Component({\n  selector: 'bs-ngx-pagination',\n  templateUrl: 'bs-ngx-pagination.component.html',\n  styleUrls: [\n    'bs-ngx-pagination.component.scss'\n  ]\n})\nexport class BsNgxPaginationComponent implements OnInit {\n  @Output() pageChange = new EventEmitter<number>();\n  @Output() perPageChange = new EventEmitter<number>();\n  @Input() data: Pagination = {} as Pagination;\n  constructor() {}\n\n  ngOnInit() {\n    if (this.data.select_per_page === undefined) {\n      this.data.select_per_page = true;\n    }\n    if (this.data.input_page === undefined) {\n      this.data.input_page = true;\n    }\n    if (this.data.select_per_page_values === undefined || this.data.select_per_page_values.length === 0) {\n      this.data.select_per_page_values = [10, 20, 50, 100, 250];\n    }\n  }\n  pageChanged(page: number) {\n    if (page < 1) {\n      page = 1;\n    } else if (page > this.data.last_page) {\n      page = this.data.last_page;\n    }\n    this.pageChange.emit(page);\n  }\n  perPageChanged(count: number) {\n    this.perPageChange.emit(count);\n  }\n  inputPageChanged(e) {\n    let page = +e.target.value;\n    if (!Number.isNaN(page)) {\n      if (page < 1) {\n        page = 1;\n        e.target.value = page;\n      } else if (page > this.data.last_page) {\n        page = this.data.last_page;\n        e.target.value = page;\n      }\n      this.pageChange.emit(page);\n    } else {\n      e.target.value = this.data.current_page;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BsNgxPaginationComponent } from './bs-ngx-pagination.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [BsNgxPaginationComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BsNgxPaginationComponent]\n})\nexport class BsNgxPaginationModule { }\n"]}