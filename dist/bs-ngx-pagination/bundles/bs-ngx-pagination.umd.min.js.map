{"version":3,"sources":["ng://bs-ngx-pagination/lib/bs-ngx-pagination.service.ts","ng://bs-ngx-pagination/lib/bs-ngx-pagination.component.ts","ng://bs-ngx-pagination/lib/bs-ngx-pagination.module.ts"],"names":["BsNgxPaginationService","Injectable","args","providedIn","BsNgxPaginationComponent","this","pageChange","EventEmitter","perPageChange","dataChange","dataValue","selectPerPage","selectPerPageValues","inputPage","Object","defineProperty","prototype","data","val","normalizeData","emit","indexOf","per_page","push","sort","a","b","pageChanged","page","last_page","perPageChanged","count","inputPageChanged","e","target","value","Number","isNaN","current_page","Component","selector","template","Output","Input","BsNgxPaginationModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"2UAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAkBE,SAAAA,IAPUC,KAAAC,WAAa,IAAIC,EAAAA,aACjBF,KAAAG,cAAgB,IAAID,EAAAA,aACpBF,KAAAI,WAAa,IAAIF,EAAAA,aAC3BF,KAAAK,UAAS,GACAL,KAAAM,eAAgB,EAChBN,KAAAO,oBAAqC,CAAC,GAAI,GAAI,GAAI,IAAK,KACvDP,KAAAQ,WAAY,EA8CvB,OA3CEC,OAAAC,eACIX,EAAAY,UAAA,OAAI,KADR,WAEE,OAAOX,KAAKY,UAEd,SAASC,GACPb,KAAKK,UAAYQ,EACjBb,KAAKc,gBACLd,KAAKI,WAAWW,KAAKF,oCAEfd,EAAAY,UAAAG,cAAR,YACsE,IAAhEd,KAAKO,oBAAoBS,SAAShB,KAAKK,UAAUY,YACnDjB,KAAKO,oBAAoBW,MAAMlB,KAAKK,UAAUY,UAC9CjB,KAAKO,oBAAoBY,KAAI,SAAEC,EAAGC,GAAM,OAAAD,EAAIC,MAGhDtB,EAAAY,UAAAW,YAAA,SAAYC,GACNA,EAAO,EACTA,EAAO,EACEA,EAAOvB,KAAKK,UAAUmB,YAC/BD,EAAOvB,KAAKK,UAAUmB,WAExBxB,KAAKC,WAAWc,KAAKQ,IAEvBxB,EAAAY,UAAAc,eAAA,SAAeC,GACT1B,KAAKK,UAAUY,WAAaS,GAC9B1B,KAAKG,cAAcY,MAAMW,IAG7B3B,EAAAY,UAAAgB,iBAAA,SAAiBC,OACXL,GAAQK,EAAEC,OAAOC,MAChBC,OAAOC,MAAMT,GAUhBK,EAAEC,OAAOC,MAAQ9B,KAAKK,UAAU4B,cAT5BV,EAAO,GACTA,EAAO,EACPK,EAAEC,OAAOC,MAAQP,GACRA,EAAOvB,KAAKK,UAAUmB,YAC/BD,EAAOvB,KAAKK,UAAUmB,UACtBI,EAAEC,OAAOC,MAAQP,GAEnBvB,KAAKC,WAAWc,KAAKQ,yBAvD1BW,EAAAA,UAASrC,KAAA,CAAC,CACTsC,SAAU,oBACVC,SAAA,qgJAMCC,EAAAA,8BACAA,EAAAA,2BACAA,EAAAA,8BAEAC,EAAAA,mCACAA,EAAAA,yBACAA,EAAAA,oBAGAA,EAAAA,SA2CHvC,EA/DA,GCAAwC,EAAA,WAIA,SAAAA,KAOqC,2BAPpCC,EAAAA,SAAQ3C,KAAA,CAAC,CACR4C,aAAc,CAAC1C,GACf2C,QAAS,CACPC,EAAAA,cAEFC,QAAS,CAAC7C,OAEyBwC,EAXrC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BsNgxPaginationService {\n\n  constructor() { }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport Pagination from './bs-ngx-pagination.interface';\n\n@Component({\n  selector: 'bs-ngx-pagination',\n  templateUrl: 'bs-ngx-pagination.component.html',\n  styleUrls: [\n    'bs-ngx-pagination.component.scss'\n  ]\n})\nexport class BsNgxPaginationComponent {\n  @Output() pageChange = new EventEmitter<number>();\n  @Output() perPageChange = new EventEmitter<number>();\n  @Output() dataChange = new EventEmitter<number>();\n  dataValue: Pagination = {} as Pagination;\n  @Input() selectPerPage = true;\n  @Input() selectPerPageValues: Array<number> = [10, 20, 50, 100, 250];\n  @Input() inputPage = true;\n  constructor() {}\n\n  @Input()\n  get data() {\n    return this.data;\n  }\n  set data(val) {\n    this.dataValue = val;\n    this.normalizeData();\n    this.dataChange.emit(val);\n  }\n  private normalizeData() {\n    if (this.selectPerPageValues.indexOf(+this.dataValue.per_page) === -1) {\n      this.selectPerPageValues.push(+this.dataValue.per_page);\n      this.selectPerPageValues.sort((a, b) => a - b);\n    }\n  }\n  pageChanged(page: number) {\n    if (page < 1) {\n      page = 1;\n    } else if (page > this.dataValue.last_page) {\n      page = this.dataValue.last_page;\n    }\n    this.pageChange.emit(page);\n  }\n  perPageChanged(count: number) {\n    if (this.dataValue.per_page !== count) {\n      this.perPageChange.emit(+count);\n    }\n  }\n  inputPageChanged(e) {\n    let page = +e.target.value;\n    if (!Number.isNaN(page)) {\n      if (page < 1) {\n        page = 1;\n        e.target.value = page;\n      } else if (page > this.dataValue.last_page) {\n        page = this.dataValue.last_page;\n        e.target.value = page;\n      }\n      this.pageChange.emit(page);\n    } else {\n      e.target.value = this.dataValue.current_page;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BsNgxPaginationComponent } from './bs-ngx-pagination.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  declarations: [BsNgxPaginationComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BsNgxPaginationComponent]\n})\nexport class BsNgxPaginationModule { }\n"]}